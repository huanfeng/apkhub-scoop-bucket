name: Tests

on:
  push:
    branches:
      - 'main'
      - 'master'
  pull_request:
  workflow_dispatch:

jobs:
  test_powershell:
    name: WindowsPowerShell
    runs-on: windows-latest
    steps:
      - name: Checkout Bucket
        uses: actions/checkout@main
        with:
          fetch-depth: 2
          path: my_bucket
      - name: Checkout Scoop
        uses: actions/checkout@main
        with:
          repository: ScoopInstaller/Scoop
          path: scoop_core
      - name: Init Test Suite
        uses: potatoqualitee/psmodulecache@main
        with:
          modules-to-cache: BuildHelpers
          shell: powershell
      - name: Ensure trailing newline in manifests
        shell: powershell
        working-directory: my_bucket
        run: |
          Get-ChildItem -Recurse -Path bucket -Filter *.json | ForEach-Object {
            $p = $_.FullName
            $bytes = [System.IO.File]::ReadAllBytes($p)
            if ($bytes.Length -eq 0 -or $bytes[-1] -ne 10) {
              [System.IO.File]::AppendAllText($p, "`r`n")
            }
          }
      - name: Test Bucket
        shell: powershell
        run: |
          $env:SCOOP_HOME="$(Convert-Path '.\scoop_core')"
          .\my_bucket\bin\test.ps1
  test_pwsh:
    name: PowerShell
    runs-on: windows-latest
    steps:
      - name: Checkout Bucket
        uses: actions/checkout@main
        with:
          fetch-depth: 2
          path: my_bucket
      - name: Checkout Scoop
        uses: actions/checkout@main
        with:
          repository: ScoopInstaller/Scoop
          path: scoop_core
      - name: Init Test Suite
        uses: potatoqualitee/psmodulecache@main
        with:
          modules-to-cache: BuildHelpers
          shell: pwsh
      - name: Ensure trailing newline in manifests
        shell: powershell
        working-directory: my_bucket
        run: |
          Get-ChildItem -Recurse -Path bucket -Filter *.json | ForEach-Object {
            $p = $_.FullName
            $bytes = [System.IO.File]::ReadAllBytes($p)
            if ($bytes.Length -eq 0 -or $bytes[-1] -ne 10) {
              [System.IO.File]::AppendAllText($p, "`r`n")
            }
          }
      - name: Test Bucket
        shell: pwsh
        run: |
          $env:SCOOP_HOME="$(Convert-Path '.\scoop_core')"
          .\my_bucket\bin\test.ps1
